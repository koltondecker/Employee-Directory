{"version":3,"sources":["components/Jumbotron.js","components/SearchBar.js","components/TableBody.js","components/Table.js","utils/API.js","App.js","index.js"],"names":["Jumbotron","className","SearchBar","search","handleInputChange","id","name","type","placeholder","aria-label","aria-describedby","value","onChange","TableBody","props","src","image","alt","firstName","lastName","phone","email","dob","Table","employeesData","sortBy","scope","onClick","map","employee","index","picture","thumbnail","first","last","moment","date","format","randomUserApi","getEmployees","axios","get","App","useState","setEmployeesData","setSearch","dataSort","setDataSort","useEffect","getRandomEmployees","API","then","res","data","results","forEach","user","fullName","birthdate","event","target","filter","toUpperCase","includes","key","previousData","sort","reverse","a","b","compareBy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bd8321e.chunk.js","sourcesContent":["import React from 'react';\nimport \"./jumbotron.css\";\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron bg-dark text-white jumbotron-fluid\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Employee Directory</h1>\n                <p className=\"lead\">Click on carrots to filter by heading or use the search box to narrow your results.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Jumbotron\n","import React from 'react';\nimport \"./searchbar.css\";\n\nfunction SearchBar({search, handleInputChange}) {\n    return (\n        <div id=\"searchBarWrapper\" className=\"input-group mb-3\">\n            <input \n                id=\"searchBar\"\n                name=\"search\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Search\"\n                aria-label=\"Username\"\n                aria-describedby=\"basic-addon1\"\n                value={search}\n                onChange={handleInputChange}>\n            </input>\n        </div>\n    )\n}\n\nexport default SearchBar","import React from 'react'\n\nfunction TableBody(props) {\n    return (\n        <tr>\n            <td>\n                <img src={props.image} alt=\"user\"></img>\n            </td>\n            <td>{props.firstName + \" \" + props.lastName}</td>\n            <td>{props.phone}</td>\n            <td>{props.email}</td>\n            <td>{props.dob}</td>\n        </tr>\n    )\n}\n\nexport default TableBody\n","import React from \"react\";\nimport TableBody from \"./TableBody\";\nimport moment from \"moment\";\nimport \"./table.css\";\n\nfunction Table({ employeesData, sortBy }) {\n    return (\n        <div id=\"tableDiv\">\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Image</th>\n                        <th scope=\"col\" onClick={() => sortBy(\"fullName\")}>Name</th>\n                        <th scope=\"col\" onClick={() => sortBy(\"phone\")}>Phone</th>\n                        <th scope=\"col\" onClick={() => sortBy(\"email\")}>Email</th>\n                        <th scope=\"col\" onClick={() => sortBy(\"birthdate\")}>DOB</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {employeesData.map((employee, index) => (\n                        <TableBody\n                        key={index}\n                        image={employee.picture.thumbnail}\n                        firstName={employee.name.first}\n                        lastName={employee.name.last}\n                        phone={employee.phone}\n                        email={employee.email}\n                        dob={moment(employee.dob.date).format(\"L\")}\n                        />\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Table\n","import axios from \"axios\";\n\nconst randomUserApi = {\n  getEmployees: function() {\n    return axios.get(\"https://randomuser.me/api/?results=30\");\n  }\n};\n\nexport default randomUserApi;","import React, { useState, useEffect } from 'react';\nimport Jumbotron from \"./components/Jumbotron\";\nimport SearchBar from './components/SearchBar';\nimport Table from './components/Table';\nimport API from \"./utils/API\";\nimport moment from \"moment\";\n\nfunction App() {\n  const [employeesData, setEmployeesData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [dataSort, setDataSort] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  useEffect(() => {\n    getRandomEmployees();\n  }, []);\n\n  const getRandomEmployees = () => {\n    API.getEmployees().then((res) => {\n      const data = res.data.results;\n      data.forEach(user => {\n        user.fullName = user.name.first + \" \" + user.name.last;\n        user.birthdate = moment(user.dob.date).format(\"L\");\n      });\n      setEmployeesData(data);\n\n    });\n  };\n\n  const compareBy = (key) => {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n \n  const sortBy = (key) => {\n    dataSort ? setEmployeesData((previousData) => [...previousData.sort().reverse()]) : setEmployeesData((previousData) => [...previousData.sort(compareBy(key))]);\n    setDataSort(!dataSort);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Jumbotron />\n        <SearchBar search={search} handleInputChange={handleInputChange}/>\n        <Table employeesData={employeesData.filter((employee) => {\n            return employee.name.first\n              .toUpperCase()\n              .includes(search.toUpperCase());\n          })} sortBy={sortBy} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}